jobs:
  build-and-deploy:
    name: Build and Deploy to AWS ECS
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Build with Maven
      run: mvn clean install -DskipTests

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Build, tag, and push Docker image to Amazon ECR
      id: build-and-push
      run: |
        docker build -t ${{ steps.ecr-login.outputs.registry }}/iece-core-api-repository:${{ github.sha }} .
        docker push ${{ steps.ecr-login.outputs.registry }}/iece-core-api-repository:${{ github.sha }}
        echo "::set-output name=image::${{ steps.ecr-login.outputs.registry }}/iece-core-api-repository:${{ github.sha }}"

    - name: Fill in the new image ID in the ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: iece-core-api-task.json
        container-name: iece-core-api
        image: ${{ steps.build-and-push.outputs.image }}

    - name: Deploy ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        service: iece-core-api-service
        cluster: iece-core-api-cluster
        task-definition: ${{ steps.task-def.outputs.task-definition }}